---
nl.thehyve.gb.backend:
    subscription:
        enabled: true
    notifications:
        # enable the notifications endpoint and the execution of daily and weekly notification jobs
        enabled: ${NOTICATIONS_ENDPOINT_ENABLED:false}
        # max number of query sets returned in a subscription email
        maxNumberOfSets: 20
        # daily cron job trigger time in format: hh-mm
        # hh: Hour, range: 0-23;
        # mm: Minute, range: 0-59;
        dailyJobTriggerTime: 0-0
        # Client application name referred from email content
        clientApplicationName: Glowing Bear
        clientApplicationUrl:

---
# Quartz plugin configuration - job for query subscription
# Controls automatic startup of the Quartz scheduler during application bootstrap
quartz:
    autoStartup: true

---
grails:
    profile: rest-api
    codegen:
        defaultPackage: nl.thehyve.gb.backend
    spring:
        transactionManagement:
            proxies: false
    gorm:
        failOnError: true
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
        default:
            # Turn off automatic versioning and timestamping by GORM
            mapping:
                version: false
                autoTimestamp: false
    databinding:
        convertEmptyStringsToNull: false
    # email server configuration for notifications
    mail:
        host: localhost
        'default':
            from: noreply@thehyve.nl
        port: 25

info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    jmx:
        enabled: true

management:
    security:
        roles: ADMIN # only ROLE_ADMIN can see the full health details
        enabled: true
    health:
        diskspace:
            enabled: false # show diskspace health indicator properties
    endpoints:
        enabled-by-default: false # Spring Actuator Endpoints are Disabled by Default
        web:
            exposure:
                include: health
            base-path: /
            path-mapping:
                health: health
    endpoint:
        health:
            enabled: true  # enable health endpoint for application monitoring
---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            json:
              - application/json
              - text/json
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            js: text/javascript
            rss: application/rss+xml
            text: text/plain
            all: '*/*'
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8

---
grails:
    cors:
        enabled: true

server:
    port: 8083

---
hibernate:
    show_sql: true
    format_sql: true
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.postgresql.Driver
    dialect: org.hibernate.dialect.PostgreSQLDialect
    url: jdbc:postgresql://localhost:${PGPORT:5432}/gb_backend

keycloak:
    # To send unauthorized response (401) instead of redirecting to keycloak login page
    bearer-only: true
    # Important for parsing roles correctly
    use-resource-role-mappings: true
    # Ensure audience field validation on the access token (by default not verified)
    verify-token-audience: true

environments:
    development:
        disable-trust-manager: true # when true, SSL certificate checking is disabled. Do not use that in production!
        dataSource:
            dbCreate: update
            url: jdbc:postgresql://localhost:${PGPORT:5432}/gb_backend
            username: gb
            password: gb
        transmart:
            server-url: ${TRANSMART_API_SERVER_URL:http://localhost:8081}
            api-version: v2
        keycloak:
            realm: ${KEYCLOAK_REALM:dev}
            auth-server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8080}/auth
            resource: ${KEYCLOAK_CLIENT_ID:transmart}
        keycloakOffline:
            offlineToken: ${KEYCLOAK_OFFLINE_TOKEN:<offline_token>}

    test:
        dataSource:
            dbCreate: create
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            driverClassName: org.h2.Driver
            username: sa
            password: ''
        transmart:
            server-url: ${TRANSMART_API_SERVER_URL:http://localhost:8081}
            api-version: v2
        keycloak:
            realm: ${KEYCLOAK_REALM:test}
            auth-server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8080}/auth
            resource: ${KEYCLOAK_CLIENT_ID:transmart}
        keycloakOffline:
            offlineToken: ${KEYCLOAK_OFFLINE_TOKEN}
    production:
        hibernate:
            show_sql: false
        dataSource:
            dbCreate: update
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

